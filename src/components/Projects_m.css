/* Responsive: Mobile (≤768px) */
@media (max-width: 768px) {
  .projects-section {
    padding: 40px 16px;
  }

  .projects-subtitle {
    font-size: 20px;
    white-space: nowrap;
    text-align: center;
  }

  .projects-title {
    font-size: 18px;
    margin-bottom: 30px;
    line-height: 1.4;
  }

  .projects-grid {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 30px;
  }

  .project-card {
    width: 100%;
    max-width: 320px;
    padding-top: 20px;
  }

  /* keep the circular ring size a little smaller on mobile */
  .project-icon {
    width: 130px;
    height: 130px;
    margin-bottom: 10px;
    padding: 6px; /* keep same ring thickness as desktop */
    box-sizing: border-box;
  }

  /* ensure the inner circle clips and the image fills it fully */
  .project-icon-inner {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    overflow: hidden; /* clip the image to the circle */
    display: flex;
    align-items: center;
    justify-content: center;
    box-sizing: border-box;
    /* keep rotation consistent with desktop or remove animation if you prefer static inner */
    animation: rotate-inner 3s linear infinite;
  }

  /* make the image fill the circular inner area on mobile */
  .project-icon img {
    width: 100%;
    height: 100%;
    object-fit: cover;    /* cover full circle without distortion */
    display: block;
    border-radius: 50%;   /* safety to keep circular shape */
    /* optional: control focal point if needed
       object-position: center top; */
  }

  .project-content {
    padding: 12px 16px 20px 16px;
  }

  .project-content h3 {
    font-size: 16px;
    margin-bottom: 8px;
    text-align: center;
  }

  .project-content p {
    font-size: 14px;
    line-height: 1.5;
    margin-bottom: 12px;
  }

  .project-links {
    display: flex;
    flex-direction: row;
    justify-content: center;
    gap: 20px;
    flex-wrap: wrap;
  }

  /* --- Add inside your @media (max-width: 768px) block in Projects_m.css --- */

  /* ensure the link itself centers its inline-flex content */
  .project-links a {
    /* already inline-flex in base — re-assert and center */
    display: inline-flex;
    justify-content: center; /* centers text horizontally inside the button */
    align-items: center;     /* centers vertically (already set in base but safe) */
    text-align: center;      /* fallback for inline text */
    box-sizing: border-box;  /* consistent padding/width calculation */
    padding-left: 14px;      /* tweak if you want more horizontal padding */
    padding-right: 14px;
  }

  /* make the inner span occupy the button so its text-centering works reliably */
  .project-links a > span {
    display: block;    /* change from inline-block to block on mobile */
    width: 100%;
    line-height: 1;    /* keep vertical spacing consistent */
    text-align: center;/* ensure the text inside span is centered */
  }

  /* Optional: make both buttons equal width on very small screens (uncomment if desired)
  .project-links a {
    flex: 1 1 140px;
    max-width: 140px;
  }
  */

  /* Keep hover/focus behaviour for mobile/touch */
  .project-links .live-btn:hover,
  .project-links .live-btn:focus-visible,
  .project-links .github-btn:hover,
  .project-links .github-btn:focus-visible {
    box-shadow: none;
  }

  /* Make sure overlay still appears on tap/focus for mobile: */
  .project-links a:active::before,
  .project-links a:focus::before {
    transform: translateX(0);
  }
}
